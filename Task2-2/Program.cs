
// 2. Сделать в двух вариантах - обычном и через LINQ
//  а) Дан массив целых чисел, отобразить
// максимальный элемент.
//  б) Дан массив целых чисел, отобразить индекс
// максимального элемента.
//  в) Дан массив структур {X:int, Y:int} -
// отобразить максимальный по Y элемент.
// г) Дан массив структур {X:int, Y:double} - отсортировать его в порядке возрастания Y и преобразовать в массив элементов {X:double, Y:int}
// д) Дано два целочислельных массива положительных чисел, определить все возможные пары из элементов массивов (первая цифра - число из первого массива, вторая цифра - число из второго массива) кратные 5.
// е) Отсортировать слова по алфавиту из предложенного строкового массива, содержащих слог "от". Не забыть про сравнение в любом регистре!
// ж) Даны 2 строки s1 и s2. Из каждой можно читать по одному символу. Выяснить, является ли строка s2 обратной s1.
// з) Дан массив целых чисел. Сгруппировать их по четности и отсортировать по возрастанию.
// и) Дан массив целых чисел. Сгруппировать их по четности. Для каждой группы посчитать сумму входящих в нее элементов. Итоговая коллекция
// Страница 2
// Задание 2.txt
// должна содержать для каждой группы поле, с
// суммой группы.
//  к) Дана коллекция пар {Фамилия, Сумма} -
// Фамилия не ключевое поле (т.е. значения в поле Фамилия повторяются в коллекции. Необходимо составить итоговую коллекцию пар: {Фамилия, Сумма всех Сумм для данной фамилии}
// class Worker
// {
//    public string Name;
//    public int Salary;
// }
// var arr = new Worker[]
// {
// new Worker {Name= "Петров", Salary = 100} new Worker {Name= "Сидоров", Salary = 200} new Worker {Name= "Петров", Salary = 130}
// }
// л) Дана коллекция повторяющихя элементов. Необходимо составить новую коллекцию, в которую попадут в одном экземпляре только элементы, встречающиеся ровно три раза в исходной коллекции.
// м) Отсортировать коллекцию пар значений сначала по-первому элементу по возрастанию, затем по-второму элементу по убыванию
// н) Есть три коллекции arr1, arr2, arr3. Страница 3
//
// Задание 2.txt
// - Необходимо создать коллекцию, состоящую из
// всех возможных троек элементов. Каждый элемент тройки представляет собой один элемент из соответствующе коллекции.
// - Преобразовать итоговую коллекцию в строку типа: (a1, b1, c1), (a2, b1, c1), ...
// !!!Последнего символа запятая быть не должно :)
//     !!!Использовать только LINQ!

namespace Task2_2
{
	class Program
	{
		static void Main()
		{
		}
	}
}